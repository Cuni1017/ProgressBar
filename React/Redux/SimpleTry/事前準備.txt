npm init

-D = --save--dev


---webpack 是JavaScript 應用程式的模組打包器。---
npm install -D webpack
npm install -D webpack-cli

---babel 若需轉譯ES6以上至ES5---
npm install -D babel-loader @babel/core @babel/preset-react
npm install -D @babel/preset-env

---React---
npm install react react-dom -D
npm install react react-router-dom

--- 壓縮CSS JS ---
npm install css-loader file-loader mini-css-extract-plugin sass sass-loader style-loader -D
---sass---
npm install sass

---讓IE也能正常運行JS---
npm install -D @babel/plugin-proposal-class-properties
npm install core-js@3 --save
npm install -D @babel/runtime

---mini 壓縮---


---webpack.config.js--- //自己創
const path = require("path");
const MiniCssExtractPlugin = require("mini-css-extract-plugin");
const devMode = process.env.NODE_ENV == "production";

---package.json---
{
  "name": "react",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": { //在這之下都可以用 npm run ? 執行
    "build": "webpack --mode production",
    "watch": "webpack -w",
    "sass" : "sass scss:css" //冒號前為要編譯的資料夾;後為輸出路徑資料夾
    "sass_watch" : "sass --watch scss:css" //sass的watch功能

  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/core": "^7.20.7",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-react": "^7.18.6",
    "babel-loader": "^9.1.0",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1"
  }
}

npm run build
npm run watch

---index.html---
<script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
or
<script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>